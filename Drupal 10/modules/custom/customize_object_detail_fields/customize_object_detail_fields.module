<?php
use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\ReplaceCommand;
use Drupal\Core\Ajax\HtmlCommand;


use Drupal\Core\Ajax\CommandInterface;
/**
 * AJAX callback for the "Add to Second List" button.
 */
function customize_object_detail_fields_setting_add_button_ajax_callback($form, &$form_state) {
  // Move selected items from the first select list to the second select list.
  $selected_items_values = array_filter($form_state->getValue('select_field1'));

  // Initialize an array
  $selected_items = array();

  // Iterate through the selected items and extract the text.
  foreach ($selected_items_values as $selected_item_value) {
    // Assuming $selected_item_value is the key of the selected option.
    // You can access the text inside the option using the form element's #options attribute.
    $option_value = $selected_item_value;
    $option_text =  (string)  $form['select_field1']['#options'][$selected_item_value];
    unset($form['select_field1']['#options'][$selected_item_value]);
    $selected_items[$option_value] = $option_text;

  }

  $form['select_field2']['#options'] = array_merge($form['select_field2']['#options'], $selected_items);
  $form_state->setRebuild(TRUE);
  $response = new AjaxResponse();

  $response->addCommand(new ReplaceCommand("#select-field2-wrapper", ($form['select_field2'])));
  $response->addCommand(new ReplaceCommand("#select-field1-wrapper", ($form['select_field1'])));

  return $response;

}


/**
 * Implements hook_form_alter().
 */
function customize_object_detail_fields_form_alter(&$form, &$form_state, $form_id) {
  // Check if this is the form you want to attach JavaScript to.
  if ($form_id === 'customize_object_detail_fields_settings_form') {

    // Attach the JavaScript file.
    $form['#attached']['library'][] = 'customize_object_detail_fields/customize_object_detail_fields';

  }
}
